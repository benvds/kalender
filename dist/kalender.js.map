{
  "version": 3,
  "sources": [
    "../../../../../usr/local/lib/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "/Users/benvds/code/web/kalender/index.js",
    "/Users/benvds/code/web/kalender/lib/calendar.js",
    "/Users/benvds/code/web/kalender/lib/consts.js",
    "/Users/benvds/code/web/kalender/lib/day.js",
    "/Users/benvds/code/web/kalender/lib/month.js",
    "/Users/benvds/code/web/kalender/lib/util.js"
  ],
  "names": [],
  "mappings": "AAAA;;;;;;;;;;;wBCAkB,aAAa;;;;sBACf,WAAW;;;;uBACL,YAAY;;IAAtB,IAAI;;2BACK,gBAAgB;;;;QAGjC,KAAK;QACL,GAAG;QACH,QAAQ;QACR,IAAI,GAAJ,IAAI;;;ACTR,YAAY,CAAC;;;;;;;;;;;;sBAEiB,UAAU;;qBACtB,SAAS;;;;;;;;;;;;;;;;;IAcN,QAAQ;AACd,aADM,QAAQ,CACb,aAAa,EAAE,OAAO,EAAE;8BADnB,QAAQ;;AAErB,YAAI,YAAY,GAAG,aAAa,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;AAC3D,YAAI,WAAW,GAAG,uBAAU,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;;;AAGjD,YAAI,CAAC,KAAK,GAAG,EAAE,CACV,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,YAAY,EACvC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAC5B,MAAM,CAAC,WAAW,CAAC,CACnB,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,EACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;KAClD;;iBAZgB,QAAQ;;eAcrB,gBAAG;AACH,gBAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,mBAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SAClC;;;;;;;;;;;eASc,2BAAG;AACd,gBAAM,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;;AAE/B,mBAAO;AACH,oBAAI,EAAE,WAAW,CAAC,WAAW,EAAE;AAC/B,qBAAK,EAAG,WAAW,CAAC,QAAQ,EAAE,GAAG,CAAC,AAAC;aACtC,CAAC;SACL;;;;;;;;;;;;;eAWQ,mBAAC,OAAO,EAAE;AACf,gBAAM,gBAAgB,GAAG,CAAC,CAAC;;AAE3B,gBAAI,OAAO,IAAI,OAAO,CAAC,SAAS,EAAE;AAC9B,uBAAO,OAAO,CAAC,SAAS,CAAC;aAC5B,MAAM;AACH,uBAAO,gBAAgB,CAAC;aAC3B;SACJ;;;;;;;;;;eAQgB,2BAAC,YAAY,EAAE,SAAS,EAAE;AACvC,gBAAI,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;;AAE/D,gBAAI,MAAM,EAAE;AACR,oBAAM,IAAI,GAAG,uBAAU,YAAY,CAAC,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CACjD,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;;AAExB,uBAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;aACvC,MAAM;AACH,uBAAO,EAAE,CAAC;aACb;SACJ;;;;;;;;;;;;;eAWkB,6BAAC,YAAY,EAAE,SAAS,EAAE;AACzC,mBAAO,CAAC,QAlGP,aAAa,GAkGU,SAAS,GAC7B,AAAC,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,YAAY,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAClD,OAAO,EAAE,CAAA,WApGjB,aAAa,AAoGqB,CAAC;SACvC;;;;;;;;;;;;;;eAYgB,2BAAC,IAAI,EAAE;AACpB,mBAAO,IAAI,CAAC,GAAG,CAAC,UAAA,GAAG,EAAI;AACnB,mBAAG,CAAC,cAAc,GAAG,IAAI,CAAC;;AAE1B,uBAAO,GAAG,CAAC;aACd,CAAC,CAAC;SACN;;;;;;;;;;;;;;eAYe,0BAAC,YAAY,EAAE,SAAS,EAAE,WAAW,EAAE;AACnD,gBAAI,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,WAAW,CAAC,EAAE;AACjD,oBAAM,IAAI,GAAG,AAAC,uBAAU,YAAY,CAAC,CAAE,IAAI,EAAE,CAAC,IAAI,EAAE,CAC/C,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;;AAE/D,uBAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;aACvC,MAAM;AACH,uBAAO,EAAE,CAAC;aACb;SACJ;;;;;;;;;;;;;eAWiB,4BAAC,SAAS,EAAE,WAAW,EAAE;AACvC,gBAAM,aAAa,GAAG,WAAW,CAAE,WAAW,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC,SAAS,CAAC;;AAEtE,mBAAO,CAAC,AAAC,QA1JR,aAAa,GA0JW,SAAS,GAAI,aAAa,GAAG,CAAC,CAAA,WA1JtD,aAAa,AA0J0D,CAAC;SAC5E;;;eAEQ,mBAAC,IAAI,EAAE;AACZ,gBAAI,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;AACvB,gBAAI,UAAU,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;AACjC,gBAAI,IAAI,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;AAC/B,gBAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;;AAEjC,mBAAO,IAAI,CAAC,GAAG,CAAC,UAAA,GAAG,EAAI;AACnB,oBAAI,GAAG,CAAC,GAAG,KAAK,UAAU,IACtB,GAAG,CAAC,KAAK,KAAK,KAAK,IACnB,GAAG,CAAC,IAAI,KAAK,IAAI,EACrB;AACI,uBAAG,CAAC,OAAO,GAAG,IAAI,CAAC;iBACtB;;AAED,uBAAO,GAAG,CAAC;aACd,CAAC,CAAC;SAEN;;;;;;;;;;;eASW,sBAAC,IAAI,EAAE;AACf,gBAAM,aAAa,GAAG,IAAI,CAAC,MAAM,WAxLhC,aAAa,AAwLmC,CAAC;AAClD,gBAAI,KAAK,GAAG,EAAE,CAAC;;AAEf,iBAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,aAAa,EAAE,IAAI,EAAE,EAAE;AAC7C,qBAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,WA5L7B,aAAa,AA4LgC,EACpB,CAAC,IAAI,GAAG,CAAC,CAAA,WA7LlC,aAAa,AA6LsC,CAAC,CAAC,CAAC;aACtD;;AAED,mBAAO,KAAK,CAAC;SAChB;;;WAlLgB,QAAQ;;;qBAAR,QAAQ;;;;ACjB7B,YAAY,CAAC;;;;;AAEN,IAAM,eAAe,GAAG,EAAE,CAAC;QAArB,eAAe,GAAf,eAAe;AACrB,IAAM,aAAa,GAAG,CAAC,CAAC;QAAlB,aAAa,GAAb,aAAa;;;ACH1B,YAAY,CAAC;;;;;;;;;;IAEQ,GAAG;;;;;;;;;;AAST,aATM,GAAG,CASR,IAAI,EAAE;8BATD,GAAG;;AAUhB,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACtB,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AACxB,YAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;AACpB,YAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;KACnC;;;;;;;;iBAdgB,GAAG;;eAqBhB,gBAAG;AACH,mBAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;SACxD;;;;;;;;;eAOW,wBAAG;AACX,mBAAO,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;SAC/B;;;;;;;;;;;eASM,iBAAC,UAAU,EAAE;AAChB,mBAAO,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SAC9C;;;;;;;;;;;;eAUO,kBAAC,UAAU,EAAE;AACjB,mBAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SAC5C;;;;;;;;;;;;eAUM,iBAAC,UAAU,EAAE;AAChB,mBAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SAC5C;;;WAnEgB,GAAG;;;qBAAH,GAAG;;;;ACFxB,YAAY,CAAC;;;;;;;;;;;;sBAEkC,UAAU;;mBACzC,OAAO;;;;AAEvB,SAAS,OAAO,CAAC,OAAO,EAAE;AACtB,WAAO,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;CAC9C;;IAEoB,KAAK;;;;;AAIX,aAJM,KAAK,GAIR;8BAJG,KAAK;;AAKlB,YAAI,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;AAE9B,YAAI,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;AAC7B,gBAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;SACnC,MAAM,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;AACpC,gBAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACrC;KACJ;;iBAZgB,KAAK;;eAcF,8BAAC,OAAO,EAAE;AAC1B,gBAAI,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AACvB,gBAAI,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;SAC3B;;;eAEkB,6BAAC,MAAM,EAAE;AACxB,gBAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AACxB,gBAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SAC7B;;;;;;;;;eAOG,gBAAG;AACH,gBAAI,MAAM,GAAG,EAAE,CAAC;;AAEhB,gBAAI,cAAc,GAAG,qBAAQ;AACzB,oBAAI,EAAE,IAAI,CAAC,IAAI;AACf,qBAAK,EAAE,IAAI,CAAC,KAAK;AACjB,mBAAG,EAAE,CAAC;aACT,CAAC,CAAC,YAAY,EAAE,CAAC;;AAElB,iBAAK,IAAI,UAAU,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,EAChD,UAAU,GAAG,MAAM,EACnB,UAAU,EAAE,EACjB;AACI,sBAAM,CAAC,IAAI,CAAC,qBAAQ;AAChB,wBAAI,EAAE,IAAI,CAAC,IAAI;AACf,yBAAK,EAAE,IAAI,CAAC,KAAK;AACjB,uBAAG,EAAE,UAAU,GAAG,CAAC;AACnB,6BAAS,EAAE,CAAC,cAAc,GAAG,UAAU,CAAA,WArD9C,aAAa,AAqDkD;iBAC3D,CAAC,CAAC,CAAC;aACP;;AAED,mBAAO,MAAM,CAAC;SACjB;;;;;;;;;eAOO,oBAAG;AACP,gBAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;AAClB,uBAAO,IAAI,KAAK,CAAC;AACb,wBAAI,EAAG,IAAI,CAAC,IAAI,GAAG,CAAC,AAAC;AACrB,yBAAK,UArEG,eAAe,AAqED;iBACzB,CAAC,CAAC;aACN,MAAM;AACH,uBAAO,IAAI,KAAK,CAAC;AACb,wBAAI,EAAE,IAAI,CAAC,IAAI;AACf,yBAAK,EAAG,IAAI,CAAC,KAAK,GAAG,CAAC,AAAC;iBAC1B,CAAC,CAAC;aACN;SACJ;;;;;;;;;eAOG,gBAAG;AACH,gBAAI,IAAI,CAAC,KAAK,aArFE,eAAe,AAqFG,EAAE;AAChC,uBAAO,IAAI,KAAK,CAAC;AACb,wBAAI,EAAG,IAAI,CAAC,IAAI,GAAG,CAAC,AAAC;AACrB,yBAAK,EAAE,CAAC;iBACX,CAAC,CAAC;aACN,MAAM;AACH,uBAAO,IAAI,KAAK,CAAC;AACb,wBAAI,EAAE,IAAI,CAAC,IAAI;AACf,yBAAK,EAAG,IAAI,CAAC,KAAK,GAAG,CAAC,AAAC;iBAC1B,CAAC,CAAC;aACN;SACJ;;;;;;;;;eAOW,wBAAG;AACX,mBAAO,AAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAE,OAAO,EAAE,CAAC;SACzD;;;WAlGgB,KAAK;;;qBAAL,KAAK;;;;ACT1B,YAAY,CAAC;;;;;;;;;;;;;;AAWb,SAAS,OAAO,CAAC,QAAQ,EAAE,QAAQ,EAAE;AACjC,SAAO,QAAQ,CAAC,GAAG,CAAC,UAAA,IAAI;WAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;GAAA,CAAC,CAAC;CACnD;;QAEQ,OAAO,GAAP,OAAO",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import Month from './lib/month';\nimport Day from './lib/day';\nimport * as util from './lib/util';\nimport Calendar from './lib/calendar';\n\nexport {\n    Month,\n    Day,\n    Calendar,\n    util\n};\n",
    "'use strict';\n\nimport { DAYS_PER_WEEK } from './consts';\nimport Month from './month';\n\n/**\n * Returns collection of day objects for the given month. Includes days from\n * sibling months to make for full weeks. Defaults to the current month.\n *\n * @argument {Object} month\n * @argument {Number} month.year\n * @argument {Number} month.month\n * @argument {Object} options\n * @argument {Number} options.weekStart sets the first day of week\n *\n * @returns {Object[]} days\n */\nexport default class Calendar {\n    constructor(_currentMonth, options) {\n        let currentMonth = _currentMonth || this.getCurrentMonth();\n        let currentDays = new Month(currentMonth).days();\n\n        // TODO move this to days methods, build proper constructor\n        this._days = []\n            .concat(this.daysMissingBefore(currentMonth,\n                this.weekStart(options)))\n            .concat(currentDays)\n            .concat(this.daysMissingAfter(currentMonth,\n                this.weekStart(options), currentDays));\n    }\n\n    days() {\n        let days = this.markToday(this._days);\n        return this.groupPerWeek(days);\n    }\n\n    /**\n     * Returns the current month\n     *\n     * @returns {Object} month\n     * @returns {Object} month.year\n     * @returns {Object} month.month\n     */\n    getCurrentMonth() {\n        const currentDate = new Date();\n\n        return {\n            year: currentDate.getFullYear(),\n            month: (currentDate.getMonth() + 1)\n        };\n    }\n\n    /**\n     * Returns week start using the one defined in options otherwise falls back to\n     * default week start.\n     *\n     * @argument {Object} options\n     * @argument {Number} options.weekStart sets the first day of week\n     *\n     * @returns {Number} week start\n     */\n    weekStart(options) {\n        const weekStartDefault = 0;\n\n        if (options && options.weekStart) {\n            return options.weekStart;\n        } else {\n            return weekStartDefault;\n        }\n    }\n\n    /**\n     * Returns collection of day objects for the month before given month. Only\n     * includes days to make a full week.\n     *\n     * @returns {Array} collection of days\n     */\n    daysMissingBefore(currentMonth, weekStart) {\n        let amount = this.amountMissingBefore(currentMonth, weekStart);\n\n        if (amount) {\n            const days = new Month(currentMonth).previous().days()\n                .slice(-1 * amount);\n\n            return this.markSiblingMonths(days);\n        } else {\n            return [];\n        }\n    }\n\n    /**\n     * Returns amount of days missing before given month to make a full week.\n     *\n     * @argument {Object} month\n     * @argument {Number} month.year\n     * @argument {Number} month.month\n     *\n     * @returns {Number} amount of days\n     */\n    amountMissingBefore(currentMonth, weekStart) {\n        return (DAYS_PER_WEEK - weekStart +\n            (new Date(currentMonth.year, currentMonth.month - 1, 0))\n                .getDate()) % DAYS_PER_WEEK;\n    }\n\n    /**\n     * Returns collection of days marked as sibling month.\n     *\n     * @argument {Object[]} days\n     * @argument {Number} days[].year\n     * @argument {Number} days[].month\n     * @argument {Number} days[].day\n     *\n     * @returns {Object[]} days with attribute isSiblingMonth: true\n     */\n    markSiblingMonths(days) {\n        return days.map(day => {\n            day.isSiblingMonth = true;\n\n            return day;\n        });\n    }\n\n    /**\n     * Returns collection of day objects for the month after given month. Only\n     * includes days to make a full week.\n     *\n     * @argument {Object} month\n     * @argument {Number} month.year\n     * @argument {Number} month.month\n     *\n     * @returns {Array} collection of days\n     */\n    daysMissingAfter(currentMonth, weekStart, currentDays) {\n        if (this.amountMissingAfter(weekStart, currentDays)) {\n            const days = (new Month(currentMonth)).next().days()\n                .slice(0, this.amountMissingAfter(weekStart, currentDays));\n\n            return this.markSiblingMonths(days);\n        } else {\n            return [];\n        }\n    }\n\n    /**\n     * Returns amount of days missing after given month to make a full week.\n     *\n     * @argument {Object} month\n     * @argument {Number} month.year\n     * @argument {Number} month.month\n     *\n     * @returns {Number} amount of days\n     */\n    amountMissingAfter(weekStart, currentDays) {\n        const lastDayOfWeek = currentDays[(currentDays.length - 1)].dayOfWeek;\n\n        return ((DAYS_PER_WEEK + weekStart) - lastDayOfWeek - 1) % DAYS_PER_WEEK;\n    }\n\n    markToday(days) {\n        let today = new Date();\n        let dayOfMonth = today.getDate();\n        let year = today.getFullYear();\n        let month = today.getMonth() + 1;\n\n        return days.map(day => {\n            if (day.day === dayOfMonth &&\n                day.month === month &&\n                day.year === year)\n            {\n                day.isToday = true;\n            }\n\n            return day;\n        });\n\n    }\n\n    /**\n     * Group the days per week.\n     *\n     * @argument {Object[]} days\n     *\n     * @returns {Object[][]} returns a matrix of weeks and days\n     */\n    groupPerWeek(days) {\n        const amountOfWeeks = days.length / DAYS_PER_WEEK;\n        let weeks = [];\n\n        for (let week = 0; week < amountOfWeeks; week++) {\n            weeks.push(days.slice(week * DAYS_PER_WEEK,\n                                  (week + 1) * DAYS_PER_WEEK));\n        }\n\n        return weeks;\n    }\n}\n\n",
    "'use strict';\n\nexport const MONTHS_PER_YEAR = 12;\nexport const DAYS_PER_WEEK = 7;\n",
    "'use strict';\n\nexport default class Day {\n    /**\n     * Sets the year, month and day.\n     *\n     * @argument {Object} args\n     * @argument {Number} args.year\n     * @argument {Number} args.month\n     * @argument {Number} args.day\n     */\n    constructor(args) {\n        this.year = args.year;\n        this.month = args.month;\n        this.day = args.day;\n        this.dayOfWeek = args.dayOfWeek;\n    }\n\n    /**\n     * Returns new native Date object for day.\n     *\n     * @returns {Date} date for day\n     */\n    date() {\n        return new Date(this.year, this.month - 1, this.day);\n    }\n\n    /**\n     * Returns day of week for given day. 1 for sunday, 7 for monday.\n     *\n     * @returns {Number} day of week\n     */\n    getDayOfWeek() {\n        return this.date().getDay();\n    }\n\n    /**\n     * Returns true when days are the same\n     *\n     * @arguments {Day} day to compare\n     *\n     * @returns {Boolean} comparison is the same day\n     */\n    isEqual(comparison) {\n        return +this.date() === +comparison.date();\n    }\n\n    /**\n     * Returns true when this day is before comparison day. Returns false when\n     * days are the same.\n     *\n     * @arguments {Day} day to compare\n     *\n     * @returns {Boolean} this day is before comparison day\n     */\n    isBefore(comparison) {\n        return +this.date() < +comparison.date();\n    }\n\n    /**\n     * Returns true when this day is after comparison day. Returns false when\n     * days are the same.\n     *\n     * @arguments {Day} day to compare\n     *\n     * @returns {Boolean} this day is after comparison day\n     */\n    isAfter(comparison) {\n        return +this.date() > +comparison.date();\n    }\n}\n",
    "'use strict';\n\nimport { DAYS_PER_WEEK, MONTHS_PER_YEAR } from './consts';\nimport Day from './day';\n\nfunction toArray(subject) {\n    return Array.prototype.slice.call(subject);\n}\n\nexport default class Month {\n    /**\n     * Sets the year, month\n     */\n    constructor() {\n        var args = toArray(arguments);\n\n        if (typeof args[0] === 'number') {\n            this.constructWithNumbers(args);\n        } else if (typeof args[0] === 'object') {\n            this.constructWithObject(args[0]);\n        }\n    }\n\n    constructWithNumbers(numbers) {\n        this.year = numbers[0];\n        this.month = numbers[1];\n    }\n\n    constructWithObject(object) {\n        this.year = object.year;\n        this.month = object.month;\n    }\n\n    /**\n     * Returns collection of days for this month.\n     *\n     * @returns {Array} collection of days\n     */\n    days() {\n        let result = [];\n\n        let firstDayOfWeek = new Day({\n            year: this.year,\n            month: this.month,\n            day: 1\n        }).getDayOfWeek();\n\n        for (let currentDay = 0, amount = this.amountOfDays();\n             currentDay < amount;\n             currentDay++)\n        {\n            result.push(new Day({\n                year: this.year,\n                month: this.month,\n                day: currentDay + 1,\n                dayOfWeek: (firstDayOfWeek + currentDay) % DAYS_PER_WEEK\n            }));\n        }\n\n        return result;\n    }\n\n    /**\n     * Returns previous month.\n     *\n     * @returns {Object} new month object\n     */\n    previous() {\n        if (this.month === 1) {\n            return new Month({\n                year: (this.year - 1),\n                month: MONTHS_PER_YEAR\n            });\n        } else {\n            return new Month({\n                year: this.year,\n                month: (this.month - 1)\n            });\n        }\n    }\n\n    /**\n     * Returns next month.\n     *\n     * @returns {Object} new Month object\n     */\n    next() {\n        if (this.month === MONTHS_PER_YEAR) {\n            return new Month({\n                year: (this.year + 1),\n                month: 1\n            });\n        } else {\n            return new Month({\n                year: this.year,\n                month: (this.month + 1)\n            });\n        }\n    }\n\n    /**\n     * Returns amount of days for month.\n     *\n     * @returns {Number} amount of days\n     */\n    amountOfDays() {\n        return (new Date(this.year, this.month, 0)).getDate();\n    }\n}\n",
    "'use strict';\n\n/**\n * Returns a new calendar with the results of calling a provided callback\n * function on every day.\n *\n * @argument {Object[][]} calendar\n * @argument {Function} callback\n *\n * @returns {Object[][]} calendar with days mapped with callback\n */\nfunction mapDays(calendar, callback) {\n    return calendar.map(week => week.map(callback));\n}\n\nexport { mapDays };\n"
  ]
}