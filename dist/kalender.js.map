{
  "version": 3,
  "sources": [
    "../../../../../usr/local/lib/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "/Users/benvds/code/web/kalender/index.js",
    "/Users/benvds/code/web/kalender/lib/calendar.js",
    "/Users/benvds/code/web/kalender/lib/day.js",
    "/Users/benvds/code/web/kalender/lib/month.js",
    "/Users/benvds/code/web/kalender/lib/util.js",
    "/Users/benvds/code/web/kalender/lib/year.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import * as year from './lib/year';\nimport * as month from './lib/month';\nimport * as day from './lib/day';\nimport * as util from './lib/util';\nimport { calendar } from './lib/calendar';\n\nexport {\n    year,\n    month,\n    day,\n    calendar,\n    util\n};\n",
    "'use strict';\n\nimport * as day from './day';\nimport * as month from './month';\n\nconst daysPerWeek = 7;\n\n/**\n * Returns collection of day objects for the given month. Includes days from\n * sibling months to make for full weeks. Defaults to the current month.\n *\n * @argument {Object} month\n * @argument {Number} month.year\n * @argument {Number} month.month\n * @argument {Object} options\n * @argument {Number} options.weekStart sets the first day of week\n *\n * @returns {Object[]} days\n */\nexport function calendar(_currentMonth, options) {\n    const currentMonth = _currentMonth || getCurrentMonth();\n    const days = []\n        .concat(daysMissingBefore(currentMonth, weekStart(options)))\n        .concat(month.days(currentMonth))\n        .concat(daysMissingAfter(currentMonth, weekStart(options)));\n\n    return groupPerWeek(days);\n}\n\n/**\n * Group the days per week.\n *\n * @argument {Object[]} days\n *\n * @returns {Object[][]} returns a matrix of weeks and days\n */\nfunction groupPerWeek(days) {\n    const amountOfWeeks = days.length / daysPerWeek;\n    let weeks = [];\n\n    for (let week = 0; week < amountOfWeeks; week++) {\n        weeks.push(days.slice(week * daysPerWeek,\n                              (week + 1) * daysPerWeek));\n    }\n\n    return weeks;\n}\n\n/**\n * Returns week start using the one defined in options otherwise falls back to\n * default week start.\n *\n * @argument {Object} options\n * @argument {Number} options.weekStart sets the first day of week\n *\n * @returns {Number} week start\n */\nfunction weekStart(options) {\n    const weekStartDefault = 0;\n\n    if (options && options.weekStart) {\n        return options.weekStart;\n    } else {\n        return weekStartDefault;\n    }\n}\n\n/**\n * Returns collection of day objects for the month before given month. Only\n * includes days to make a full week.\n *\n * @argument {Object} month\n * @argument {Number} month.year\n * @argument {Number} month.month\n *\n * @returns {Array} collection of days\n */\nfunction daysMissingBefore(currentMonth, weekStart) {\n    if (amountMissingBefore(currentMonth, weekStart)) {\n        const days = month.days(month.previousMonth(currentMonth))\n            .slice(-1 * amountMissingBefore(currentMonth, weekStart));\n\n        return markAsSiblingMonth(days);\n    } else {\n        return [];\n    }\n}\n\n/**\n * Returns amount of days missing before given month to make a full week.\n *\n * @argument {Object} month\n * @argument {Number} month.year\n * @argument {Number} month.month\n *\n * @returns {Number} amount of days\n */\nfunction amountMissingBefore(currentMonth, weekStart) {\n    return (daysPerWeek - weekStart +\n            month.days(currentMonth)[0].dayOfWeek) % daysPerWeek;\n}\n\n/**\n * Returns collection of day objects for the month after given month. Only\n * includes days to make a full week.\n *\n * @argument {Object} month\n * @argument {Number} month.year\n * @argument {Number} month.month\n *\n * @returns {Array} collection of days\n */\nfunction daysMissingAfter(currentMonth, weekStart) {\n    if (amountMissingAfter(currentMonth, weekStart)) {\n        const days = month.days(month.nextMonth(currentMonth))\n            .slice(0, amountMissingAfter(currentMonth, weekStart));\n\n        return markAsSiblingMonth(days);\n    } else {\n        return [];\n    }\n}\n\n/**\n * Returns amount of days missing after given month to make a full week.\n *\n * @argument {Object} month\n * @argument {Number} month.year\n * @argument {Number} month.month\n *\n * @returns {Number} amount of days\n */\nfunction amountMissingAfter(currentMonth, weekStart) {\n    const days = month.days(currentMonth);\n    const lastDayOfWeek = day.dayOfWeek(days[(days.length - 1)]);\n\n    return ((daysPerWeek + weekStart) - lastDayOfWeek - 1) % daysPerWeek;\n}\n\n/**\n * Returns collection of days marked as sibling month.\n *\n * @argument {Object[]} days\n * @argument {Number} days[].year\n * @argument {Number} days[].month\n * @argument {Number} days[].day\n *\n * @returns {Object[]} days with attribute isSiblingMonth: true\n */\nfunction markAsSiblingMonth(days) {\n    return days.map(day => {\n        day.isSiblingMonth = true;\n\n        return day;\n    });\n}\n\n/**\n * Returns the current month\n *\n * @returns {Object} month\n */\nfunction getCurrentMonth() {\n    const currentDate = new Date();\n\n    return {\n        year: currentDate.getFullYear(),\n        month: (currentDate.getMonth() + 1)\n    };\n}\n",
    "'use strict';\n\nconst dayWeights = {\n    year: 385,\n    month: 32,\n    day: 1\n};\n\n/**\n * Returns day of week for given day. 1 for sunday, 7 for monday.\n *\n * @argument {Object} day\n * @argument {Number} day.year\n * @argument {Number} day.month\n * @argument {Number} day.day\n *\n * @returns {Number} day of week\n */\nfunction dayOfWeek(day) {\n    const date = new Date(day.year, day.month - 1, day.day);\n\n    return date.getDay();\n}\n\n/**\n * Returns if subject day is before comparison day.\n *\n * @argument {Object} subject day\n * @argument {Object} comparsion day\n *\n * @returns {Boolean} true when subject day is before comparison day\n */\nfunction isBefore(subject, comparison) {\n    return dayWeight(subject) < dayWeight(comparison);\n}\n\n/**\n * Returns if subject day is after comparison day.\n *\n * @argument {Object} subject day\n * @argument {Object} comparsion day\n *\n * @returns {Boolean} true when subject day is after comparison day\n */\nfunction isAfter(subject, comparison) {\n    return dayWeight(subject) > dayWeight(comparison);\n}\n\n/**\n * Returns weight for a day which can be used in comparisons. Weights are not\n * relative to each other. Later dates only have higher weights. Using weights\n * is more than a 100 times faster than creating a date and getting the\n * primitive value.\n *\n * @argument {Object} day\n * @argument {Number} day.year\n * @argument {Number} day.month\n * @argument {Number} day.day\n *\n * @returns {Number} dayWeight timestamp for start of day\n */\nfunction dayWeight(day) {\n    return (day.day * dayWeights.day) +\n        (day.month * dayWeights.month) +\n        (day.year * dayWeights.year);\n}\n\n/**\n * Returns if subject day is the same as the comparison day.\n *\n * @argument {Object} subject day\n * @argument {Object} comparsion day\n *\n * @returns {Boolean} true when subject day is the same as the comparison day\n */\nfunction isEqual(subject, comparison) {\n    return (subject.day === comparison.day) &&\n        (subject.month === comparison.month) &&\n        (subject.year === comparison.year);\n}\n\nexport {\n    dayOfWeek,\n    isBefore,\n    isAfter,\n    isEqual\n};\n",
    "'use strict';\n\nimport * as year from './year';\nimport * as day from './day';\n\nconst monthsPerYear = 12;\n\n/**\n * Returns amount of days for given month, includes leap days.\n *\n * @argument {Object} month\n * @argument {Number} month.year\n * @argument {Number} month.month\n *\n * @returns {Number} amount of days\n */\nfunction amountOfDays(month) {\n    const daysPerMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    const normalAmount = daysPerMonth[month.month - 1];\n\n    return hasLeapDay(month) ? normalAmount + 1 : normalAmount;\n}\n\n/**\n * Returns true when given month has a leap day.\n *\n * @argument {Object} month\n * @argument {Number} month.year\n * @argument {Number} month.month\n *\n * @returns {Boolean}\n */\nfunction hasLeapDay(month) {\n    const monthWithAdditionalDayOnLeapYear = 2;\n\n    return (month.month === monthWithAdditionalDayOnLeapYear &&\n        year.isLeapYear(month.year));\n}\n\n/**\n * Returns month previous to given month.\n *\n * @argument {Object} month\n * @argument {Number} month.year\n * @argument {Number} month.month\n *\n * @returns {Object} new month object\n */\nfunction previousMonth(month) {\n    if (month.month === 1) {\n        return {\n            year: (month.year - 1),\n            month: monthsPerYear\n        };\n    } else {\n        return {\n            year: month.year,\n            month: (month.month - 1)\n        };\n    }\n}\n\n/**\n * Returns month next to given month.\n *\n * @argument {Object} month\n * @argument {Number} month.year\n * @argument {Number} month.month\n *\n * @returns {Object} new month object\n */\nfunction nextMonth(month) {\n    if (month.month === monthsPerYear) {\n        return {\n            year: (month.year + 1),\n            month: 1\n        };\n    } else {\n        return {\n            year: month.year,\n            month: (month.month + 1)\n        };\n    }\n}\n\n/**\n * Returns collection of day objects for given month.\n *\n * @argument {Object} month\n * @argument {Number} month.year\n * @argument {Number} month.month\n *\n * @returns {Array} collection of day objects\n */\nfunction days(month) {\n    let result = [];\n\n    for (let currentDay = 1, amount = amountOfDays(month);\n         currentDay <= amount;\n         currentDay++)\n    {\n        result.push({\n            year: month.year,\n            month: month.month,\n            day: currentDay,\n            dayOfWeek: day.dayOfWeek({\n                year: month.year,\n                month: month.month,\n                day: currentDay\n            })\n        });\n    }\n\n    return flagToday(result);\n}\n\nfunction flagToday(days) {\n    const curDate = new Date();\n    const dayOfMonth = curDate.getDate();\n\n    if (days[0].year === curDate.getFullYear() &&\n        days[0].month === (curDate.getMonth() + 1))\n    {\n        return days.map(day => {\n            if (day.day === dayOfMonth) {\n                day.isToday = true;\n            }\n\n            return day;\n        });\n    } else {\n        return days;\n    }\n\n}\n\nexport {\n    amountOfDays,\n    previousMonth,\n    nextMonth,\n    days\n};\n",
    "'use strict';\n\n/**\n * Returns a new calendar with the results of calling a provided callback\n * function on every day.\n *\n * @argument {Object[][]} calendar\n * @argument {Function} callback\n *\n * @returns {Object[][]} calendar with days mapped with callback\n */\nfunction mapDays(calendar, callback) {\n    return calendar.map(week => week.map(callback));\n}\n\nexport { mapDays };\n",
    "'use strict';\n\n/**\n * Returns true when given year is a leap year.\n *\n * @argument {Number} year\n *\n * @returns {Boolean}\n */\nfunction isLeapYear(year) {\n    return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n}\n\nexport { isLeapYear };\n"
  ]
}